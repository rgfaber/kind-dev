apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: fluentd-config-map
  name: fluentd-config-map
data:
  fluentd.conf: |
      # fluentd/conf/fluent.conf
      <match fluent.**>
        @type null
      </match>

      <source >
        @type http_healthcheck
        port 9880
        bind 0.0.0.0
      </source>

      <source>
        @type tail
        @id in_tail_container_logs
        path /var/apps-logging/*.log
        pos_file /var/apps-logging/fluentd-containers.log.pos
        tag kubernetes.*
        read_from_head true
        <parse>
          @type json
          time_format %Y-%m-%dT%H:%M:%S.%NZ
        </parse>
      </source>

      <filter kubernetes.**>
        @type kubernetes_metadata
        @id filter_kube_metadata
      </filter>

      <match kubernetes.**>
        @type copy
        <store>
            @type elasticsearch_dynamic
            @id out_es
            @log_level info

            #Server settings
            host "#{ENV['FLUENT_ELASTICSEARCH_HOST']}"
            port 9200
            scheme http
            ssl_verify true
            ssl_version TLSv1
            user "#{ENV['FLUENT_ELASTICSEARCH_USER']}"
            password "#{ENV['FLUENT_ELASTICSEARCH_PASSWORD']}"

            #Index and format settings
            logstash_dateformat %Y%m
            logstash_format true
            logstash_prefix logstash
            include_tag_key true
            
            # HTTP request settings per threat etc
            request_timeout 15s
            reload_connections false
            reconnect_on_error true
            reload_on_failure true
        
        #Buffer is used for many chunk data incomming
          <buffer>
            
            flush_thread_count "#{ENV['FLUENT_ELASTICSEARCH_BUFFER_FLUSH_THREAD_COUNT'] || '8'}"
            flush_interval "#{ENV['FLUENT_ELASTICSEARCH_BUFFER_FLUSH_INTERVAL'] || '5s'}"
            chunk_limit_size "#{ENV['FLUENT_ELASTICSEARCH_BUFFER_CHUNK_LIMIT_SIZE'] || '2M'}"
            queue_limit_length "#{ENV['FLUENT_ELASTICSEARCH_BUFFER_QUEUE_LIMIT_LENGTH'] || '32'}"
            retry_max_interval "#{ENV['FLUENT_ELASTICSEARCH_BUFFER_RETRY_MAX_INTERVAL'] || '30'}"
            retry_forever true

          </buffer>
              
          </store>
      </match>

      <match **>
        @type copy
        <store>
        @type stdout
        </store>
      </match>

